{
	"apilist": {
		"interfaces": [
			{
				"name": "ISteamApps",
				"methods": [
					{
						"name": "GetAppList",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [

						]
						
					},
					{
						"name": "GetAppList",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [

						]
						
					},
					{
						"name": "GetServersAtAddress",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "addr",
								"type": "string",
								"optional": false,
								"description": "IP or IP:queryport to list"
							}
						]
						
					},
					{
						"name": "UpToDateCheck",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID of game"
							},
							{
								"name": "version",
								"type": "uint32",
								"optional": false,
								"description": "The installed version of the game"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamEconomy",
				"methods": [
					{
						"name": "GetAssetClassInfo",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "Must be a steam economy app."
							},
							{
								"name": "language",
								"type": "string",
								"optional": true,
								"description": "The user's local language"
							},
							{
								"name": "class_count",
								"type": "uint32",
								"optional": false,
								"description": "Number of classes requested. Must be at least one."
							},
							{
								"name": "classid0",
								"type": "uint64",
								"optional": false,
								"description": "Class ID of the nth class."
							},
							{
								"name": "instanceid0",
								"type": "uint64",
								"optional": true,
								"description": "Instance ID of the nth class."
							}
						]
						
					},
					{
						"name": "GetAssetPrices",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "Must be a steam economy app."
							},
							{
								"name": "currency",
								"type": "string",
								"optional": true,
								"description": "The currency to filter for"
							},
							{
								"name": "language",
								"type": "string",
								"optional": true,
								"description": "The user's local language"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamGameServerAccount",
				"methods": [
					{
						"name": "GetAccountPublicInfoBySteamID",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "steamID",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of the game server whose info is being requested"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamNews",
				"methods": [
					{
						"name": "GetNewsForApp",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID to retrieve news for"
							},
							{
								"name": "maxlength",
								"type": "uint32",
								"optional": true,
								"description": "Maximum length for the content to return, if this is 0 the full content is returned, if it's less then a blurb is generated to fit."
							},
							{
								"name": "enddate",
								"type": "uint32",
								"optional": true,
								"description": "Retrieve posts earlier than this date (unix epoch timestamp)"
							},
							{
								"name": "count",
								"type": "uint32",
								"optional": true,
								"description": "# of posts to retrieve (default 20)"
							}
						]
						
					},
					{
						"name": "GetNewsForApp",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID to retrieve news for"
							},
							{
								"name": "maxlength",
								"type": "uint32",
								"optional": true,
								"description": "Maximum length for the content to return, if this is 0 the full content is returned, if it's less then a blurb is generated to fit."
							},
							{
								"name": "enddate",
								"type": "uint32",
								"optional": true,
								"description": "Retrieve posts earlier than this date (unix epoch timestamp)"
							},
							{
								"name": "count",
								"type": "uint32",
								"optional": true,
								"description": "# of posts to retrieve (default 20)"
							},
							{
								"name": "feeds",
								"type": "string",
								"optional": true,
								"description": "Comma-seperated list of feed names to return news for"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamRemoteStorage",
				"methods": [
					{
						"name": "GetCollectionDetails",
						"version": 1,
						"httpmethod": "POST",
						"parameters": [
							{
								"name": "collectioncount",
								"type": "uint32",
								"optional": false,
								"description": "Number of collection being requested"
							},
							{
								"name": "publishedfileids[0]",
								"type": "uint64",
								"optional": false,
								"description": "collection ids to get the details for"
							}
						]
						
					},
					{
						"name": "GetPublishedFileDetails",
						"version": 1,
						"httpmethod": "POST",
						"parameters": [
							{
								"name": "itemcount",
								"type": "uint32",
								"optional": false,
								"description": "Number of items being requested"
							},
							{
								"name": "publishedfileids[0]",
								"type": "uint64",
								"optional": false,
								"description": "published file id to look up"
							}
						]
						
					},
					{
						"name": "GetUGCFileDetails",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "steamid",
								"type": "uint64",
								"optional": true,
								"description": "If specified, only returns details if the file is owned by the SteamID specified"
							},
							{
								"name": "ugcid",
								"type": "uint64",
								"optional": false,
								"description": "ID of UGC file to get info for"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appID of product"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamUser",
				"methods": [
					{
						"name": "GetFriendList",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							},
							{
								"name": "relationship",
								"type": "string",
								"optional": true,
								"description": "relationship type (ex: friend)"
							}
						]
						
					},
					{
						"name": "GetPlayerBans",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamids",
								"type": "string",
								"optional": false,
								"description": "Comma-delimited list of SteamIDs"
							}
						]
						
					},
					{
						"name": "GetPlayerSummaries",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamids",
								"type": "string",
								"optional": false,
								"description": "Comma-delimited list of SteamIDs"
							}
						]
						
					},
					{
						"name": "GetPlayerSummaries",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamids",
								"type": "string",
								"optional": false,
								"description": "Comma-delimited list of SteamIDs (max: 100)"
							}
						]
						
					},
					{
						"name": "GetUserGroupList",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							}
						]
						
					},
					{
						"name": "ResolveVanityURL",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "vanityurl",
								"type": "string",
								"optional": false,
								"description": "The vanity URL to get a SteamID for"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamUserAuth",
				"methods": [
					{
						"name": "AuthenticateUser",
						"version": 1,
						"httpmethod": "POST",
						"parameters": [
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "Should be the users steamid, unencrypted."
							},
							{
								"name": "sessionkey",
								"type": "rawbinary",
								"optional": false,
								"description": "Should be a 32 byte random blob of data, which is then encrypted with RSA using the Steam system's public key.  Randomness is important here for security."
							},
							{
								"name": "encrypted_loginkey",
								"type": "rawbinary",
								"optional": false,
								"description": "Should be the users hashed loginkey, AES encrypted with the sessionkey."
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamUserOAuth",
				"methods": [
					{
						"name": "GetTokenDetails",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "access_token",
								"type": "string",
								"optional": false,
								"description": "OAuth2 token for which to return details"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamUserStats",
				"methods": [
					{
						"name": "GetGlobalAchievementPercentagesForApp",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "gameid",
								"type": "uint64",
								"optional": false,
								"description": "GameID to retrieve the achievement percentages for"
							}
						]
						
					},
					{
						"name": "GetGlobalAchievementPercentagesForApp",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "gameid",
								"type": "uint64",
								"optional": false,
								"description": "GameID to retrieve the achievement percentages for"
							}
						]
						
					},
					{
						"name": "GetGlobalStatsForGame",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID that we're getting global stats for"
							},
							{
								"name": "count",
								"type": "uint32",
								"optional": false,
								"description": "Number of stats get data for"
							},
							{
								"name": "name[0]",
								"type": "string",
								"optional": false,
								"description": "Names of stat to get data for"
							},
							{
								"name": "startdate",
								"type": "uint32",
								"optional": true,
								"description": "Start date for daily totals (unix epoch timestamp)"
							},
							{
								"name": "enddate",
								"type": "uint32",
								"optional": true,
								"description": "End date for daily totals (unix epoch timestamp)"
							}
						]
						
					},
					{
						"name": "GetNumberOfCurrentPlayers",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID that we're getting user count for"
							}
						]
						
					},
					{
						"name": "GetPlayerAchievements",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "AppID to get achievements for"
							},
							{
								"name": "l",
								"type": "string",
								"optional": true,
								"description": "Language to return strings for"
							}
						]
						
					},
					{
						"name": "GetSchemaForGame",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appid of game"
							},
							{
								"name": "l",
								"type": "string",
								"optional": true,
								"description": "localized langauge to return (english, french, etc.)"
							}
						]
						
					},
					{
						"name": "GetSchemaForGame",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appid of game"
							},
							{
								"name": "l",
								"type": "string",
								"optional": true,
								"description": "localized language to return (english, french, etc.)"
							}
						]
						
					},
					{
						"name": "GetUserStatsForGame",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appid of game"
							}
						]
						
					},
					{
						"name": "GetUserStatsForGame",
						"version": 2,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": false,
								"description": "SteamID of user"
							},
							{
								"name": "appid",
								"type": "uint32",
								"optional": false,
								"description": "appid of game"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamWebAPIUtil",
				"methods": [
					{
						"name": "GetServerInfo",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [

						]
						
					},
					{
						"name": "GetSupportedAPIList",
						"version": 1,
						"httpmethod": "GET",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": true,
								"description": "access key"
							}
						]
						
					}
				]
				
			},
			{
				"name": "ISteamWebUserPresenceOAuth",
				"methods": [
					{
						"name": "PollStatus",
						"version": 1,
						"httpmethod": "POST",
						"parameters": [
							{
								"name": "steamid",
								"type": "string",
								"optional": false,
								"description": "Steam ID of the user"
							},
							{
								"name": "umqid",
								"type": "uint64",
								"optional": false,
								"description": "UMQ ID"
							},
							{
								"name": "message",
								"type": "uint32",
								"optional": false,
								"description": "Message that was last known to the user"
							},
							{
								"name": "pollid",
								"type": "uint32",
								"optional": true,
								"description": "Caller-specific poll id"
							},
							{
								"name": "sectimeout",
								"type": "uint32",
								"optional": true,
								"description": "Long-poll timeout in seconds"
							},
							{
								"name": "secidletime",
								"type": "uint32",
								"optional": true,
								"description": "How many seconds is client considering itself idle, e.g. screen is off"
							},
							{
								"name": "use_accountids",
								"type": "uint32",
								"optional": true,
								"description": "Boolean, 0 (default): return steamid_from in output, 1: return accountid_from"
							}
						]
						
					}
				]
				
			},
			{
				"name": "IPlayerService",
				"methods": [
					{
						"name": "GetRecentlyPlayedGames",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets information about a player's recently played games",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": true,
								"description": "The player we're asking about"
							},
							{
								"name": "count",
								"type": "uint32",
								"optional": true,
								"description": "The number of games to return (0/unset: all)"
							}
						]
						
					},
					{
						"name": "GetOwnedGames",
						"version": 1,
						"httpmethod": "GET",
						"description": "Return a list of games owned by the player",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": true,
								"description": "The player we're asking about"
							},
							{
								"name": "include_appinfo",
								"type": "bool",
								"optional": true,
								"description": "true if we want additional details (name, icon) about each game"
							},
							{
								"name": "include_played_free_games",
								"type": "bool",
								"optional": true,
								"description": "Free games are excluded by default.  If this is set, free games the user has played will be returned."
							},
							{
								"name": "appids_filter",
								"type": "uint32",
								"optional": true,
								"description": "if set, restricts result set to the passed in apps"
							}
						]
						
					},
					{
						"name": "GetSteamLevel",
						"version": 1,
						"httpmethod": "GET",
						"description": "Returns the Steam Level of a user",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": true,
								"description": "The player we're asking about"
							}
						]
						
					},
					{
						"name": "GetBadges",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets badges that are owned by a specific user",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": true,
								"description": "The player we're asking about"
							}
						]
						
					},
					{
						"name": "GetCommunityBadgeProgress",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets all the quests needed to get the specified badge, and which are completed",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "steamid",
								"type": "uint64",
								"optional": true,
								"description": "The player we're asking about"
							},
							{
								"name": "badgeid",
								"type": "int32",
								"optional": true,
								"description": "The badge we're asking about"
							}
						]
						
					}
				]
				
			},
			{
				"name": "IEconService",
				"methods": [
					{
						"name": "GetTradeOffers",
						"version": 1,
						"httpmethod": "GET",
						"description": "Get a list of sent or received trade offers",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "get_sent_offers",
								"type": "bool",
								"optional": true,
								"description": "Request the list of sent offers."
							},
							{
								"name": "get_received_offers",
								"type": "bool",
								"optional": true,
								"description": "Request the list of received offers."
							},
							{
								"name": "get_descriptions",
								"type": "bool",
								"optional": true,
								"description": "If set, the item display data for the items included in the returned trade offers will also be returned."
							},
							{
								"name": "language",
								"type": "string",
								"optional": true,
								"description": "The language to use when loading item display data."
							},
							{
								"name": "active_only",
								"type": "bool",
								"optional": true,
								"description": "Indicates we should only return offers which are still active, or offers that have changed in state since the time_historical_cutoff"
							},
							{
								"name": "historical_only",
								"type": "bool",
								"optional": true,
								"description": "Indicates we should only return offers which are not active."
							},
							{
								"name": "time_historical_cutoff",
								"type": "uint32",
								"optional": true,
								"description": "When active_only is set, offers updated since this time will also be returned"
							}
						]
						
					},
					{
						"name": "GetTradeOffer",
						"version": 1,
						"httpmethod": "GET",
						"description": "Gets a specific trade offer",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "tradeofferid",
								"type": "uint64",
								"optional": true
							},
							{
								"name": "language",
								"type": "string",
								"optional": true
							}
						]
						
					},
					{
						"name": "GetTradeOffersSummary",
						"version": 1,
						"httpmethod": "GET",
						"description": "Get counts of pending and new trade offers",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "time_last_visit",
								"type": "uint32",
								"optional": true,
								"description": "The time the user last visited.  If not passed, will use the time the user last visited the trade offer page."
							}
						]
						
					},
					{
						"name": "DeclineTradeOffer",
						"version": 1,
						"httpmethod": "POST",
						"description": "Decline a trade offer someone sent to us",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "tradeofferid",
								"type": "uint64",
								"optional": true
							}
						]
						
					},
					{
						"name": "CancelTradeOffer",
						"version": 1,
						"httpmethod": "POST",
						"description": "Cancel a trade offer we sent",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "tradeofferid",
								"type": "uint64",
								"optional": true
							}
						]
						
					}
				]
				
			},
			{
				"name": "IOAuthTokenService",
				"methods": [
					{
						"name": "ImplicitGrantNoPrompt",
						"version": 1,
						"httpmethod": "POST",
						"description": "Grants an implicit OAuth token (grant type 'token') for the specified client ID on behalf of a user without prompting",
						"parameters": [
							{
								"name": "key",
								"type": "string",
								"optional": false,
								"description": "Access key"
							},
							{
								"name": "clientid",
								"type": "string",
								"optional": true,
								"description": "Client ID for which to count the number of issued tokens"
							}
						]
						
					}
				]
				
			}
		]
		
	}
}