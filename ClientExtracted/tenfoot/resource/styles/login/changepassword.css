.ChangePasswordInputContainer
{
	margin-top: 50px;
	flow-children: down;
	margin-bottom: controlgapvert;
}

.NewPasswordInputContainer
{
	margin-top: 30px;
	flow-children: down;
}

TextEntry
{
	width: buttonwidth;
	height: buttonheight;

	font-size: 38px;
	font-family: platformfont;
	animation-name: none;
	vertical-align: center;
 	background-color: #173a4c;

	// Linux/Mac bug: border-radius != 0 results in no border - will fix
	//border-radius: 2px;
	border-radius: 0px;
}

Label.TextEntryPrompt
{
	horizontal-align: right;
	vertical-align: center;
	color: #888888;
	font-size: 27px;
	font-family: platformfont;
	padding-right: 6px;
	border-radius: 2px;

	transition-property: opacity;
	transition-duration: 0.23s;
	transition-timing-function: ease-in;
}

TextEntry:disabled,.Button:disabled,ToggleButton:disabled
{
	desaturation: 0.0;
	blur: gaussian( 0.7 );
	opacity: 0.40;
	border-color: none;
	box-shadow: none;
	animation-name: none;
}

.Button:disabled Label,ToggleButton:disabled,ToggleButton:disabled .TickBox
{
	color: #9B9B9B;
}

// tickbox to turn togglebuttons into checkboxes
.CheckBox .TickBox
{
	width: 38px;
	height: 38px;
	vertical-align: center;
	background-color: ui_common_control; 
	
	transition-property: transform, background-color, border, box-shadow, color;
	transition-timing-function: ease-out;
	transition-duration: 0.3s;	
}

.CheckBox:Selected .TickBox
{
	background-image: url( "file://{images}/store/Icon_CheckDefault.png" );
	background-repeat: no-repeat;
	background-position: 50% 50%;
	background-color: ui_common_control;
	
}

.CheckBox:Focus .TickBox
{
	background-color: gradient( linear, -15% 0%, 100% 0%, from( #fdfdfdff ), to( #bdbfbfff ) ); 
	border-color: #ffffff;
}

.CheckBox:Selected:Focus .TickBox
{
	background-image: url( "file://{images}/store/Icon_CheckFocus.png" );
	background-repeat: no-repeat;
	background-position: 50% 50%;
	background-color: gradient( linear, -15% 0%, 100% 0%, from( #fdfdfdff ), to( #bdbfbfff ) ); 
	border-color: #ffffff;
}

// and make room for the tickbox
.CheckBox Label
{
	padding-left: 52px;
	padding-top: 6px;
	color: detailsdatalabel;
	width: 100%;
	text-overflow: clip;
	white-space: nowrap;

	transform: translatex(-7px);
	transition-property: color, transform;
	transition-duration: 0.23s;
	transition-timing-function: ease-in;
}

.CheckBox:hover Label
{
	color: #ffffffff;
	transform: translatex(0px);
}

.CheckBox:focus Label
{
	transform: translatex(0px);
}

// If the password control has focus and caplock is not on
TextEntry.CapsLock:focus .Password, .PasswordCapsLock
{
	opacity: 0.0;
}

// If the password control has focus and caplock is on
.Password, TextEntry.CapsLock:focus .PasswordCapsLock
{
	opacity: 1.0;
}

.HasInput .Password, TextEntry.HasInput:focus .PasswordCapsLock
{
	opacity: 0.0;
}

#PasswordLabelContainer
{
	width: buttonwidth;
}

#StrengthLabel
{
	horizontal-align: right;
}

#ThrobberContainer
{
	margin-top: 260px;
	horizontal-align: center;
}

.Throbber
{
	opacity: 1.0;
	width: 130px;
	height: 130px;
	horizontal-align: center;
	opacity-mask: url( "file://{images}/browser/reticle_mask_80_80.png" );
	background-image: url( "file://{images}/browser/reticle_80_80.webm" );
	background-repeat: no-repeat no-repeat;
	background-size: 100% 100%;
}

.ForcedChange #ButtonCancel
{
	visibility: collapse;
}

#CurrentPasswordButtonBack
{
	visibility: collapse;
}

.ForcedChange #CurrentPasswordButtonBack
{
	visibility: visible;
}

#ConfCodePlain
{
	visibility: collapse;
}

.ForgotPassword #ConfCodePlain
{
	visibility: visible;
}

.ForgotPassword #ConfCodeEmail
{
	visibility: collapse;
}
